volumes:
  pg_data_production:
  static_volume:
  media_volume:
services:
  db:
    image: postgres:13.10
    env_file: .env
    volumes:
      - pg_data_production:/var/lib/postgresql/data/
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U bot_user -d telegram_bot" ]
      interval: 5s
      timeout: 5s
      retries: 5
  backend:
    image: lasellar/epatazhnost_backend
    env_file: .env
    volumes:
      - static_volume:/backend_static
      - media_volume:/app/media/
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health" ]
      interval: 10s
      timeout: 5s
      retries: 5
  bot:
    image: lasellar/epatazhnost_bot
    env_file: .env
    depends_on:
      db:
        condition: service_healthy
  #frontend:
    #image: lasellar/epatazhnost_frontend
    #env_file: .env
    #volumes:
      #- static_volume:/frontend_static
    #command: cp -r /app/build/. /frontend_static/
  gateway:
    image: lasellar/epatazhnost_gateway
    env_file: .env
    volumes:
      - static_volume:/backend_static/
      - media_volume:/app/media/
    ports:
      - 8000:80
    depends_on:
      backend:
        condition: service_healthy

networks:
  default:
    name: bridge_network
    driver: bridge